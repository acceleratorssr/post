// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/cache/cache_rank.go
//
// Generated by this command:
//
//	mockgen -source=./repository/cache/cache_rank.go -destination=./repository/cache/mock/cache_rank_mock.go --package=cacheMocks
//

// Package cacheMocks is a generated GoMock package.
package cacheMocks

import (
	context "context"
	domain "post/domain"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRankCache is a mock of RankCache interface.
type MockRankCache struct {
	ctrl     *gomock.Controller
	recorder *MockRankCacheMockRecorder
}

// MockRankCacheMockRecorder is the mock recorder for MockRankCache.
type MockRankCacheMockRecorder struct {
	mock *MockRankCache
}

// NewMockRankCache creates a new mock instance.
func NewMockRankCache(ctrl *gomock.Controller) *MockRankCache {
	mock := &MockRankCache{ctrl: ctrl}
	mock.recorder = &MockRankCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRankCache) EXPECT() *MockRankCacheMockRecorder {
	return m.recorder
}

// GetTopNBrief mocks base method.
func (m *MockRankCache) GetTopNBrief(ctx context.Context) ([]domain.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopNBrief", ctx)
	ret0, _ := ret[0].([]domain.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopNBrief indicates an expected call of GetTopNBrief.
func (mr *MockRankCacheMockRecorder) GetTopNBrief(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopNBrief", reflect.TypeOf((*MockRankCache)(nil).GetTopNBrief), ctx)
}

// SetTopN mocks base method.
func (m *MockRankCache) SetTopN(ctx context.Context, arts []domain.Article) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTopN", ctx, arts)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTopN indicates an expected call of SetTopN.
func (mr *MockRankCacheMockRecorder) SetTopN(ctx, arts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTopN", reflect.TypeOf((*MockRankCache)(nil).SetTopN), ctx, arts)
}

// SetTopNBrief mocks base method.
func (m *MockRankCache) SetTopNBrief(ctx context.Context, arts []domain.Article) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTopNBrief", ctx, arts)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTopNBrief indicates an expected call of SetTopNBrief.
func (mr *MockRankCacheMockRecorder) SetTopNBrief(ctx, arts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTopNBrief", reflect.TypeOf((*MockRankCache)(nil).SetTopNBrief), ctx, arts)
}
