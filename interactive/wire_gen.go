// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"post/interactive/events"
	"post/interactive/grpc"
	"post/interactive/ioc"
	"post/interactive/repository"
	"post/interactive/repository/cache"
	"post/interactive/repository/dao"
	"post/interactive/service"
)

// Injectors from wire.go:

func InitApp() *App {
	db := ioc.InitDB()
	articleLikeDao := dao.NewGORMArticleLikeDao(db)
	cmdable := ioc.InitRedis()
	articleLikeCache := cache.NewRedisArticleLikeCache(cmdable)
	likeRepository := repository.NewLikeRepository(articleLikeDao, articleLikeCache)
	likeService := service.NewLikeService(likeRepository)
	likeServiceServer := grpc.NewLikeServiceServer(likeService)
	server := ioc.InitGRPCexServer(likeServiceServer)
	client := ioc.InitKafka()
	kafkaConsumer := events.NewKafkaConsumer(client, likeRepository)
	v := ioc.NewKafkaConsumer(kafkaConsumer)
	app := &App{
		server:    server,
		consumers: v,
	}
	return app
}

// wire.go:

var thirdPartySet = wire.NewSet(ioc.InitDB, ioc.InitRedis, ioc.InitLogger, ioc.InitKafka, ioc.InitGRPCexServer, ioc.NewKafkaConsumer)

var likeSvcProvider = wire.NewSet(service.NewLikeService, repository.NewLikeRepository, dao.NewGORMArticleLikeDao, cache.NewRedisArticleLikeCache)
